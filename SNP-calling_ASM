1. Map high-quality and adaptor-trimmed reads to genome (BS-Seeker2)

module load python/3.7.4
module load bowtie2
module load krb5/1.19.3
module load libssh/0.8.5

python /path/to/BSseeker2/bs_seeker2-align.py -i /path/to/input/file_trimmed.fq --aligner=bowtie2 -o /path/to/output/file.bam -g /path/to/genome/genome.fasta -r

python /path/to/BSseeker2/bs_seeker2-call_methylation.py --rm-SX --rm-CCGG -i /path/to/input/file.bam -o /path/to/output/file --db /path/to/BSseeker2/bs_utils/reference_genomes/genome.fasta_rrbs_20_500_bowtie2/


2. Call SNPs (CGmapTools)

cgmaptools snv -i /path/to/input/file.ATCGmap.gz -m bayes -v /path/to/output/file.vcf -o /path/to/output/file.snv --bayes-e=0.01 --bayes-dynamicP


3. Compute depth of coverage for all mapped positions (SAMtools)

module load samtools/1.15.1
module load htslib/1.15.1

samtools depth /path/to/input/file.bam > /path/to/output/file.AverageCoverage


4. Calculate 99th percentile depth of coverage after excluding reads with less than 10-fold coverage (R)

module load r/4.3.0
library(VariantAnnotation)

vcf <- readVcf(/path/to/output/file.vcf, genome = "genome")
dp_matrix <- geno(vcf)$DP
dp_values <- as.vector(dp_matrix)
dp_filtered <- dp_values[!is.na(dp_values) & dp_values >= 10]
percentile_99 <- quantile(dp_filtered, 0.99)


5. Variant filtering (VCFtools)

module load samtools/1.15.1
module load htslib/1.15.1
module load vcftools/0.1.14

vcftools --vcf /path/to/file.vcf --minDP 10 --maxDP percentile_99 --remove-filtered-all --recode --recode-INFO-all --out /path/to/output/file.DP  ###'percentile_99' should be an integer.

sed '/\.\/\./d' /path/to/output/file.DP.recode.vcf > /path/to/output/file.DP.filtered.vcf


6. Predict allele-specific DNA methylation (CGmapTools)

module load samtools/1.15.1
module load r/4.3.1
module load python

cgmaptools asm -m ass -L 0.4 -H 0.6 -r /path/to/genome/genome.fasta -b /path/to/input/file.bam -l /path/to/input/file.DP.filtered.vcf > /path/to/output/file.asm
